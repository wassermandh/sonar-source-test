name: Build
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  Tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - uses: actions/setup-python@v2

      - name: JavaScript Test & Coverage
        shell: bash -l {0}
        run: nvm install && yarn install && npx yarn run test:coverage

      - name: Python Test & Coverage
        run: pip3 install pytest pytest-cov && pytest src/__tests__ --cov=src --cov-report xml:cov.xml && pytest src --junitxml=exec.xml

      - name: Upload Test Reports
        uses: actions/upload-artifact@master
        with:
          name: Test_Reports
          path: |
            ${{github.workspace}}/test-report.xml
            ${{github.workspace}}/coverage/lcov.info
            ${{github.workspace}}/cov.xml
            ${{github.workspace}}/exec.xml

  Linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - uses: actions/setup-python@v2

      - name: Pylint
        run: pip3 install pylint && pylint src --exit-zero --output-format=parseable > pylint.parseable

      - name: ESLint
        shell: bash -l {0}
        run: nvm install && yarn add eslint && yarn run eslint src -f ./eslint_relative_path_formatter.js -o eslint.json || exit 0

      - name: Upload Linting Reports
        uses: actions/upload-artifact@master
        with:
          name: Linting_Reports
          path: |
            ${{github.workspace}}/eslint.json
            ${{github.workspace}}/pylint.parseable

  Dependency_Check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install node modules
        shell: bash -l {0}
        run: nvm install && yarn install
      - name: Depcheck
        uses: dependency-check/Dependency-Check_Action@main
        id: Depcheck
        with:
          project: "sonar-source-test"
          path: "."
          format: "HTML"
          others: ""
      - name: Upload Dependency Check
        uses: actions/upload-artifact@master
        with:
          name: Depcheck_report
          path: ${{github.workspace}}/reports

  SonarQube_Analysis:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v2
      - name: Install Sonarqube
        shell: bash -l {0}
        run: |
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip
          unzip sonar-scanner-cli-4.6.2.2472-linux.zip
          rm -rf sonar-scanner-cli-4.6.2.2472-linux.zip
          mv sonar-scanner-4.6.2.2472-linux/ /opt/sonar-scanner
          echo 'export PATH="$PATH:/opt/sonar-scanner/bin"' >>~/.bash_profile
          source ~/.bash_profile
      - name: Run Sonarqube Analysis
        shell: bash -l {0}
        run: sonar-scanner -Dsonar.login=${{ secrets.SONAR_TOKEN }} -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }}